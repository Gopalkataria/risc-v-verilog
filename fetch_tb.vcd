$date
	Mon Mar  3 19:54:33 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module riscv_tb $end
$var reg 1 ! clk $end
$var reg 32 " prev_pc [31:0] $end
$var reg 1 # reset $end
$var integer 32 $ stable_cycles [31:0] $end
$scope module dut $end
$var wire 1 ! clk $end
$var wire 32 % read_data1 [31:0] $end
$var wire 32 & read_data2 [31:0] $end
$var wire 1 # reset $end
$var wire 32 ' return_addr [31:0] $end
$var wire 32 ( reg_write_data [31:0] $end
$var wire 7 ) opcode [6:0] $end
$var wire 32 * mem_data [31:0] $end
$var wire 32 + mem_address [31:0] $end
$var wire 1 , is_jalr $end
$var wire 32 - imm [31:0] $end
$var wire 7 . funct7 [6:0] $end
$var wire 3 / funct3 [2:0] $end
$var wire 32 0 branch_target [31:0] $end
$var wire 1 1 branch_taken $end
$var wire 32 2 alu_b [31:0] $end
$var wire 32 3 alu_a [31:0] $end
$var wire 1 4 RegWrite_ctrl $end
$var wire 1 5 MemtoReg_ctrl $end
$var wire 1 6 MemWrite $end
$var wire 1 7 MemRead $end
$var wire 1 8 Jump $end
$var wire 1 9 Branch $end
$var wire 1 : AUIPC $end
$var wire 32 ; ALU_result [31:0] $end
$var wire 1 < ALUSrc $end
$var reg 32 = A [31:0] $end
$var reg 32 > ALUOut [31:0] $end
$var reg 1 ? ALUSrcA $end
$var reg 2 @ ALUSrcB [1:0] $end
$var reg 32 A B [31:0] $end
$var reg 32 B IR [31:0] $end
$var reg 1 C IRWrite $end
$var reg 1 D IorD $end
$var reg 32 E MDR [31:0] $end
$var reg 1 F MemtoReg $end
$var reg 32 G PC [31:0] $end
$var reg 2 H PCSrc [1:0] $end
$var reg 1 I PCWrite $end
$var reg 1 J RegWrite $end
$var reg 3 K next_state [2:0] $end
$var reg 3 L state [2:0] $end
$var integer 32 M i [31:0] $end
$scope module control_unit $end
$var wire 7 N opcode [6:0] $end
$var reg 1 < ALUSrc $end
$var reg 1 : AUIPC $end
$var reg 1 9 Branch $end
$var reg 1 8 Jump $end
$var reg 1 7 MemRead $end
$var reg 1 6 MemWrite $end
$var reg 1 5 MemtoReg $end
$var reg 1 4 RegWrite $end
$upscope $end
$scope module execute_unit $end
$var wire 1 < ALUSrc $end
$var wire 1 9 Branch $end
$var wire 32 O PC [31:0] $end
$var wire 1 1 branch_taken $end
$var wire 3 P funct3 [2:0] $end
$var wire 7 Q funct7 [6:0] $end
$var wire 32 R read_data1 [31:0] $end
$var wire 32 S read_data2 [31:0] $end
$var wire 64 T read_data2_64 [63:0] $end
$var wire 64 U read_data1_64 [63:0] $end
$var wire 64 V operand2_64 [63:0] $end
$var wire 64 W imm_64 [63:0] $end
$var wire 32 X imm [31:0] $end
$var wire 32 Y branch_target [31:0] $end
$var wire 64 Z alu_result_64 [63:0] $end
$var wire 32 [ ALU_result [31:0] $end
$scope module alu $end
$var wire 64 \ a [63:0] $end
$var wire 64 ] b [63:0] $end
$var wire 3 ^ funct3 [2:0] $end
$var wire 7 _ funct7 [6:0] $end
$var wire 64 ` xor_result [63:0] $end
$var wire 64 a sub_result [63:0] $end
$var wire 64 b srl_result [63:0] $end
$var wire 64 c sra_result [63:0] $end
$var wire 64 d sltu_result [63:0] $end
$var wire 64 e slt_result [63:0] $end
$var wire 64 f sll_result [63:0] $end
$var wire 64 g or_result [63:0] $end
$var wire 64 h and_result [63:0] $end
$var wire 64 i add_result [63:0] $end
$var reg 64 j result [63:0] $end
$scope module add_op $end
$var wire 64 k a [63:0] $end
$var wire 64 l b [63:0] $end
$var wire 1 m cin $end
$var wire 64 n sum [63:0] $end
$var wire 1 o cout $end
$var wire 64 p carry [63:0] $end
$scope begin adder_loop[0] $end
$scope begin genblk2 $end
$scope module fa $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 m cin $end
$var wire 1 s cout $end
$var wire 1 t sum $end
$var wire 1 u w1 $end
$var wire 1 v w2 $end
$var wire 1 w w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[1] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 x a $end
$var wire 1 y b $end
$var wire 1 z cin $end
$var wire 1 { cout $end
$var wire 1 | sum $end
$var wire 1 } w1 $end
$var wire 1 ~ w2 $end
$var wire 1 !" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 $" cin $end
$var wire 1 %" cout $end
$var wire 1 &" sum $end
$var wire 1 '" w1 $end
$var wire 1 (" w2 $end
$var wire 1 )" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[3] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 *" a $end
$var wire 1 +" b $end
$var wire 1 ," cin $end
$var wire 1 -" cout $end
$var wire 1 ." sum $end
$var wire 1 /" w1 $end
$var wire 1 0" w2 $end
$var wire 1 1" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[4] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 2" a $end
$var wire 1 3" b $end
$var wire 1 4" cin $end
$var wire 1 5" cout $end
$var wire 1 6" sum $end
$var wire 1 7" w1 $end
$var wire 1 8" w2 $end
$var wire 1 9" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[5] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 <" cin $end
$var wire 1 =" cout $end
$var wire 1 >" sum $end
$var wire 1 ?" w1 $end
$var wire 1 @" w2 $end
$var wire 1 A" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[6] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 D" cin $end
$var wire 1 E" cout $end
$var wire 1 F" sum $end
$var wire 1 G" w1 $end
$var wire 1 H" w2 $end
$var wire 1 I" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[7] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 L" cin $end
$var wire 1 M" cout $end
$var wire 1 N" sum $end
$var wire 1 O" w1 $end
$var wire 1 P" w2 $end
$var wire 1 Q" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[8] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 R" a $end
$var wire 1 S" b $end
$var wire 1 T" cin $end
$var wire 1 U" cout $end
$var wire 1 V" sum $end
$var wire 1 W" w1 $end
$var wire 1 X" w2 $end
$var wire 1 Y" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[9] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 \" cin $end
$var wire 1 ]" cout $end
$var wire 1 ^" sum $end
$var wire 1 _" w1 $end
$var wire 1 `" w2 $end
$var wire 1 a" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[10] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 b" a $end
$var wire 1 c" b $end
$var wire 1 d" cin $end
$var wire 1 e" cout $end
$var wire 1 f" sum $end
$var wire 1 g" w1 $end
$var wire 1 h" w2 $end
$var wire 1 i" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[11] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 j" a $end
$var wire 1 k" b $end
$var wire 1 l" cin $end
$var wire 1 m" cout $end
$var wire 1 n" sum $end
$var wire 1 o" w1 $end
$var wire 1 p" w2 $end
$var wire 1 q" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[12] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 r" a $end
$var wire 1 s" b $end
$var wire 1 t" cin $end
$var wire 1 u" cout $end
$var wire 1 v" sum $end
$var wire 1 w" w1 $end
$var wire 1 x" w2 $end
$var wire 1 y" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[13] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 z" a $end
$var wire 1 {" b $end
$var wire 1 |" cin $end
$var wire 1 }" cout $end
$var wire 1 ~" sum $end
$var wire 1 !# w1 $end
$var wire 1 "# w2 $end
$var wire 1 ## w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[14] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 $# a $end
$var wire 1 %# b $end
$var wire 1 &# cin $end
$var wire 1 '# cout $end
$var wire 1 (# sum $end
$var wire 1 )# w1 $end
$var wire 1 *# w2 $end
$var wire 1 +# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[15] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ,# a $end
$var wire 1 -# b $end
$var wire 1 .# cin $end
$var wire 1 /# cout $end
$var wire 1 0# sum $end
$var wire 1 1# w1 $end
$var wire 1 2# w2 $end
$var wire 1 3# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[16] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 4# a $end
$var wire 1 5# b $end
$var wire 1 6# cin $end
$var wire 1 7# cout $end
$var wire 1 8# sum $end
$var wire 1 9# w1 $end
$var wire 1 :# w2 $end
$var wire 1 ;# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[17] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 <# a $end
$var wire 1 =# b $end
$var wire 1 ># cin $end
$var wire 1 ?# cout $end
$var wire 1 @# sum $end
$var wire 1 A# w1 $end
$var wire 1 B# w2 $end
$var wire 1 C# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[18] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 D# a $end
$var wire 1 E# b $end
$var wire 1 F# cin $end
$var wire 1 G# cout $end
$var wire 1 H# sum $end
$var wire 1 I# w1 $end
$var wire 1 J# w2 $end
$var wire 1 K# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[19] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 L# a $end
$var wire 1 M# b $end
$var wire 1 N# cin $end
$var wire 1 O# cout $end
$var wire 1 P# sum $end
$var wire 1 Q# w1 $end
$var wire 1 R# w2 $end
$var wire 1 S# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[20] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 T# a $end
$var wire 1 U# b $end
$var wire 1 V# cin $end
$var wire 1 W# cout $end
$var wire 1 X# sum $end
$var wire 1 Y# w1 $end
$var wire 1 Z# w2 $end
$var wire 1 [# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[21] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 \# a $end
$var wire 1 ]# b $end
$var wire 1 ^# cin $end
$var wire 1 _# cout $end
$var wire 1 `# sum $end
$var wire 1 a# w1 $end
$var wire 1 b# w2 $end
$var wire 1 c# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[22] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 d# a $end
$var wire 1 e# b $end
$var wire 1 f# cin $end
$var wire 1 g# cout $end
$var wire 1 h# sum $end
$var wire 1 i# w1 $end
$var wire 1 j# w2 $end
$var wire 1 k# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[23] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 l# a $end
$var wire 1 m# b $end
$var wire 1 n# cin $end
$var wire 1 o# cout $end
$var wire 1 p# sum $end
$var wire 1 q# w1 $end
$var wire 1 r# w2 $end
$var wire 1 s# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[24] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 t# a $end
$var wire 1 u# b $end
$var wire 1 v# cin $end
$var wire 1 w# cout $end
$var wire 1 x# sum $end
$var wire 1 y# w1 $end
$var wire 1 z# w2 $end
$var wire 1 {# w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[25] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 |# a $end
$var wire 1 }# b $end
$var wire 1 ~# cin $end
$var wire 1 !$ cout $end
$var wire 1 "$ sum $end
$var wire 1 #$ w1 $end
$var wire 1 $$ w2 $end
$var wire 1 %$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[26] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 &$ a $end
$var wire 1 '$ b $end
$var wire 1 ($ cin $end
$var wire 1 )$ cout $end
$var wire 1 *$ sum $end
$var wire 1 +$ w1 $end
$var wire 1 ,$ w2 $end
$var wire 1 -$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[27] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 .$ a $end
$var wire 1 /$ b $end
$var wire 1 0$ cin $end
$var wire 1 1$ cout $end
$var wire 1 2$ sum $end
$var wire 1 3$ w1 $end
$var wire 1 4$ w2 $end
$var wire 1 5$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[28] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 6$ a $end
$var wire 1 7$ b $end
$var wire 1 8$ cin $end
$var wire 1 9$ cout $end
$var wire 1 :$ sum $end
$var wire 1 ;$ w1 $end
$var wire 1 <$ w2 $end
$var wire 1 =$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[29] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 >$ a $end
$var wire 1 ?$ b $end
$var wire 1 @$ cin $end
$var wire 1 A$ cout $end
$var wire 1 B$ sum $end
$var wire 1 C$ w1 $end
$var wire 1 D$ w2 $end
$var wire 1 E$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[30] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 F$ a $end
$var wire 1 G$ b $end
$var wire 1 H$ cin $end
$var wire 1 I$ cout $end
$var wire 1 J$ sum $end
$var wire 1 K$ w1 $end
$var wire 1 L$ w2 $end
$var wire 1 M$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[31] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 N$ a $end
$var wire 1 O$ b $end
$var wire 1 P$ cin $end
$var wire 1 Q$ cout $end
$var wire 1 R$ sum $end
$var wire 1 S$ w1 $end
$var wire 1 T$ w2 $end
$var wire 1 U$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[32] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 V$ a $end
$var wire 1 W$ b $end
$var wire 1 X$ cin $end
$var wire 1 Y$ cout $end
$var wire 1 Z$ sum $end
$var wire 1 [$ w1 $end
$var wire 1 \$ w2 $end
$var wire 1 ]$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[33] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ^$ a $end
$var wire 1 _$ b $end
$var wire 1 `$ cin $end
$var wire 1 a$ cout $end
$var wire 1 b$ sum $end
$var wire 1 c$ w1 $end
$var wire 1 d$ w2 $end
$var wire 1 e$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[34] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 f$ a $end
$var wire 1 g$ b $end
$var wire 1 h$ cin $end
$var wire 1 i$ cout $end
$var wire 1 j$ sum $end
$var wire 1 k$ w1 $end
$var wire 1 l$ w2 $end
$var wire 1 m$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[35] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 n$ a $end
$var wire 1 o$ b $end
$var wire 1 p$ cin $end
$var wire 1 q$ cout $end
$var wire 1 r$ sum $end
$var wire 1 s$ w1 $end
$var wire 1 t$ w2 $end
$var wire 1 u$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[36] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 v$ a $end
$var wire 1 w$ b $end
$var wire 1 x$ cin $end
$var wire 1 y$ cout $end
$var wire 1 z$ sum $end
$var wire 1 {$ w1 $end
$var wire 1 |$ w2 $end
$var wire 1 }$ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[37] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ~$ a $end
$var wire 1 !% b $end
$var wire 1 "% cin $end
$var wire 1 #% cout $end
$var wire 1 $% sum $end
$var wire 1 %% w1 $end
$var wire 1 &% w2 $end
$var wire 1 '% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[38] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 (% a $end
$var wire 1 )% b $end
$var wire 1 *% cin $end
$var wire 1 +% cout $end
$var wire 1 ,% sum $end
$var wire 1 -% w1 $end
$var wire 1 .% w2 $end
$var wire 1 /% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[39] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 0% a $end
$var wire 1 1% b $end
$var wire 1 2% cin $end
$var wire 1 3% cout $end
$var wire 1 4% sum $end
$var wire 1 5% w1 $end
$var wire 1 6% w2 $end
$var wire 1 7% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[40] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 8% a $end
$var wire 1 9% b $end
$var wire 1 :% cin $end
$var wire 1 ;% cout $end
$var wire 1 <% sum $end
$var wire 1 =% w1 $end
$var wire 1 >% w2 $end
$var wire 1 ?% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[41] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 @% a $end
$var wire 1 A% b $end
$var wire 1 B% cin $end
$var wire 1 C% cout $end
$var wire 1 D% sum $end
$var wire 1 E% w1 $end
$var wire 1 F% w2 $end
$var wire 1 G% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[42] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 H% a $end
$var wire 1 I% b $end
$var wire 1 J% cin $end
$var wire 1 K% cout $end
$var wire 1 L% sum $end
$var wire 1 M% w1 $end
$var wire 1 N% w2 $end
$var wire 1 O% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[43] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 P% a $end
$var wire 1 Q% b $end
$var wire 1 R% cin $end
$var wire 1 S% cout $end
$var wire 1 T% sum $end
$var wire 1 U% w1 $end
$var wire 1 V% w2 $end
$var wire 1 W% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[44] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 X% a $end
$var wire 1 Y% b $end
$var wire 1 Z% cin $end
$var wire 1 [% cout $end
$var wire 1 \% sum $end
$var wire 1 ]% w1 $end
$var wire 1 ^% w2 $end
$var wire 1 _% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[45] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 `% a $end
$var wire 1 a% b $end
$var wire 1 b% cin $end
$var wire 1 c% cout $end
$var wire 1 d% sum $end
$var wire 1 e% w1 $end
$var wire 1 f% w2 $end
$var wire 1 g% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[46] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 h% a $end
$var wire 1 i% b $end
$var wire 1 j% cin $end
$var wire 1 k% cout $end
$var wire 1 l% sum $end
$var wire 1 m% w1 $end
$var wire 1 n% w2 $end
$var wire 1 o% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[47] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 p% a $end
$var wire 1 q% b $end
$var wire 1 r% cin $end
$var wire 1 s% cout $end
$var wire 1 t% sum $end
$var wire 1 u% w1 $end
$var wire 1 v% w2 $end
$var wire 1 w% w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[48] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 x% a $end
$var wire 1 y% b $end
$var wire 1 z% cin $end
$var wire 1 {% cout $end
$var wire 1 |% sum $end
$var wire 1 }% w1 $end
$var wire 1 ~% w2 $end
$var wire 1 !& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[49] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 "& a $end
$var wire 1 #& b $end
$var wire 1 $& cin $end
$var wire 1 %& cout $end
$var wire 1 && sum $end
$var wire 1 '& w1 $end
$var wire 1 (& w2 $end
$var wire 1 )& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[50] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 *& a $end
$var wire 1 +& b $end
$var wire 1 ,& cin $end
$var wire 1 -& cout $end
$var wire 1 .& sum $end
$var wire 1 /& w1 $end
$var wire 1 0& w2 $end
$var wire 1 1& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[51] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 2& a $end
$var wire 1 3& b $end
$var wire 1 4& cin $end
$var wire 1 5& cout $end
$var wire 1 6& sum $end
$var wire 1 7& w1 $end
$var wire 1 8& w2 $end
$var wire 1 9& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[52] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 :& a $end
$var wire 1 ;& b $end
$var wire 1 <& cin $end
$var wire 1 =& cout $end
$var wire 1 >& sum $end
$var wire 1 ?& w1 $end
$var wire 1 @& w2 $end
$var wire 1 A& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[53] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 B& a $end
$var wire 1 C& b $end
$var wire 1 D& cin $end
$var wire 1 E& cout $end
$var wire 1 F& sum $end
$var wire 1 G& w1 $end
$var wire 1 H& w2 $end
$var wire 1 I& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[54] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 J& a $end
$var wire 1 K& b $end
$var wire 1 L& cin $end
$var wire 1 M& cout $end
$var wire 1 N& sum $end
$var wire 1 O& w1 $end
$var wire 1 P& w2 $end
$var wire 1 Q& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[55] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 R& a $end
$var wire 1 S& b $end
$var wire 1 T& cin $end
$var wire 1 U& cout $end
$var wire 1 V& sum $end
$var wire 1 W& w1 $end
$var wire 1 X& w2 $end
$var wire 1 Y& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[56] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Z& a $end
$var wire 1 [& b $end
$var wire 1 \& cin $end
$var wire 1 ]& cout $end
$var wire 1 ^& sum $end
$var wire 1 _& w1 $end
$var wire 1 `& w2 $end
$var wire 1 a& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[57] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 b& a $end
$var wire 1 c& b $end
$var wire 1 d& cin $end
$var wire 1 e& cout $end
$var wire 1 f& sum $end
$var wire 1 g& w1 $end
$var wire 1 h& w2 $end
$var wire 1 i& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[58] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 j& a $end
$var wire 1 k& b $end
$var wire 1 l& cin $end
$var wire 1 m& cout $end
$var wire 1 n& sum $end
$var wire 1 o& w1 $end
$var wire 1 p& w2 $end
$var wire 1 q& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[59] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 r& a $end
$var wire 1 s& b $end
$var wire 1 t& cin $end
$var wire 1 u& cout $end
$var wire 1 v& sum $end
$var wire 1 w& w1 $end
$var wire 1 x& w2 $end
$var wire 1 y& w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[60] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 z& a $end
$var wire 1 {& b $end
$var wire 1 |& cin $end
$var wire 1 }& cout $end
$var wire 1 ~& sum $end
$var wire 1 !' w1 $end
$var wire 1 "' w2 $end
$var wire 1 #' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[61] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 $' a $end
$var wire 1 %' b $end
$var wire 1 &' cin $end
$var wire 1 '' cout $end
$var wire 1 (' sum $end
$var wire 1 )' w1 $end
$var wire 1 *' w2 $end
$var wire 1 +' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[62] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ,' a $end
$var wire 1 -' b $end
$var wire 1 .' cin $end
$var wire 1 /' cout $end
$var wire 1 0' sum $end
$var wire 1 1' w1 $end
$var wire 1 2' w2 $end
$var wire 1 3' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[63] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 4' a $end
$var wire 1 5' b $end
$var wire 1 6' cin $end
$var wire 1 7' cout $end
$var wire 1 8' sum $end
$var wire 1 9' w1 $end
$var wire 1 :' w2 $end
$var wire 1 ;' w3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module and_op $end
$var wire 64 <' a [63:0] $end
$var wire 64 =' b [63:0] $end
$var wire 64 >' result [63:0] $end
$scope begin and_loop[0] $end
$upscope $end
$scope begin and_loop[1] $end
$upscope $end
$scope begin and_loop[2] $end
$upscope $end
$scope begin and_loop[3] $end
$upscope $end
$scope begin and_loop[4] $end
$upscope $end
$scope begin and_loop[5] $end
$upscope $end
$scope begin and_loop[6] $end
$upscope $end
$scope begin and_loop[7] $end
$upscope $end
$scope begin and_loop[8] $end
$upscope $end
$scope begin and_loop[9] $end
$upscope $end
$scope begin and_loop[10] $end
$upscope $end
$scope begin and_loop[11] $end
$upscope $end
$scope begin and_loop[12] $end
$upscope $end
$scope begin and_loop[13] $end
$upscope $end
$scope begin and_loop[14] $end
$upscope $end
$scope begin and_loop[15] $end
$upscope $end
$scope begin and_loop[16] $end
$upscope $end
$scope begin and_loop[17] $end
$upscope $end
$scope begin and_loop[18] $end
$upscope $end
$scope begin and_loop[19] $end
$upscope $end
$scope begin and_loop[20] $end
$upscope $end
$scope begin and_loop[21] $end
$upscope $end
$scope begin and_loop[22] $end
$upscope $end
$scope begin and_loop[23] $end
$upscope $end
$scope begin and_loop[24] $end
$upscope $end
$scope begin and_loop[25] $end
$upscope $end
$scope begin and_loop[26] $end
$upscope $end
$scope begin and_loop[27] $end
$upscope $end
$scope begin and_loop[28] $end
$upscope $end
$scope begin and_loop[29] $end
$upscope $end
$scope begin and_loop[30] $end
$upscope $end
$scope begin and_loop[31] $end
$upscope $end
$scope begin and_loop[32] $end
$upscope $end
$scope begin and_loop[33] $end
$upscope $end
$scope begin and_loop[34] $end
$upscope $end
$scope begin and_loop[35] $end
$upscope $end
$scope begin and_loop[36] $end
$upscope $end
$scope begin and_loop[37] $end
$upscope $end
$scope begin and_loop[38] $end
$upscope $end
$scope begin and_loop[39] $end
$upscope $end
$scope begin and_loop[40] $end
$upscope $end
$scope begin and_loop[41] $end
$upscope $end
$scope begin and_loop[42] $end
$upscope $end
$scope begin and_loop[43] $end
$upscope $end
$scope begin and_loop[44] $end
$upscope $end
$scope begin and_loop[45] $end
$upscope $end
$scope begin and_loop[46] $end
$upscope $end
$scope begin and_loop[47] $end
$upscope $end
$scope begin and_loop[48] $end
$upscope $end
$scope begin and_loop[49] $end
$upscope $end
$scope begin and_loop[50] $end
$upscope $end
$scope begin and_loop[51] $end
$upscope $end
$scope begin and_loop[52] $end
$upscope $end
$scope begin and_loop[53] $end
$upscope $end
$scope begin and_loop[54] $end
$upscope $end
$scope begin and_loop[55] $end
$upscope $end
$scope begin and_loop[56] $end
$upscope $end
$scope begin and_loop[57] $end
$upscope $end
$scope begin and_loop[58] $end
$upscope $end
$scope begin and_loop[59] $end
$upscope $end
$scope begin and_loop[60] $end
$upscope $end
$scope begin and_loop[61] $end
$upscope $end
$scope begin and_loop[62] $end
$upscope $end
$scope begin and_loop[63] $end
$upscope $end
$upscope $end
$scope module or_op $end
$var wire 64 ?' a [63:0] $end
$var wire 64 @' b [63:0] $end
$var wire 64 A' result [63:0] $end
$scope begin or_loop[0] $end
$upscope $end
$scope begin or_loop[1] $end
$upscope $end
$scope begin or_loop[2] $end
$upscope $end
$scope begin or_loop[3] $end
$upscope $end
$scope begin or_loop[4] $end
$upscope $end
$scope begin or_loop[5] $end
$upscope $end
$scope begin or_loop[6] $end
$upscope $end
$scope begin or_loop[7] $end
$upscope $end
$scope begin or_loop[8] $end
$upscope $end
$scope begin or_loop[9] $end
$upscope $end
$scope begin or_loop[10] $end
$upscope $end
$scope begin or_loop[11] $end
$upscope $end
$scope begin or_loop[12] $end
$upscope $end
$scope begin or_loop[13] $end
$upscope $end
$scope begin or_loop[14] $end
$upscope $end
$scope begin or_loop[15] $end
$upscope $end
$scope begin or_loop[16] $end
$upscope $end
$scope begin or_loop[17] $end
$upscope $end
$scope begin or_loop[18] $end
$upscope $end
$scope begin or_loop[19] $end
$upscope $end
$scope begin or_loop[20] $end
$upscope $end
$scope begin or_loop[21] $end
$upscope $end
$scope begin or_loop[22] $end
$upscope $end
$scope begin or_loop[23] $end
$upscope $end
$scope begin or_loop[24] $end
$upscope $end
$scope begin or_loop[25] $end
$upscope $end
$scope begin or_loop[26] $end
$upscope $end
$scope begin or_loop[27] $end
$upscope $end
$scope begin or_loop[28] $end
$upscope $end
$scope begin or_loop[29] $end
$upscope $end
$scope begin or_loop[30] $end
$upscope $end
$scope begin or_loop[31] $end
$upscope $end
$scope begin or_loop[32] $end
$upscope $end
$scope begin or_loop[33] $end
$upscope $end
$scope begin or_loop[34] $end
$upscope $end
$scope begin or_loop[35] $end
$upscope $end
$scope begin or_loop[36] $end
$upscope $end
$scope begin or_loop[37] $end
$upscope $end
$scope begin or_loop[38] $end
$upscope $end
$scope begin or_loop[39] $end
$upscope $end
$scope begin or_loop[40] $end
$upscope $end
$scope begin or_loop[41] $end
$upscope $end
$scope begin or_loop[42] $end
$upscope $end
$scope begin or_loop[43] $end
$upscope $end
$scope begin or_loop[44] $end
$upscope $end
$scope begin or_loop[45] $end
$upscope $end
$scope begin or_loop[46] $end
$upscope $end
$scope begin or_loop[47] $end
$upscope $end
$scope begin or_loop[48] $end
$upscope $end
$scope begin or_loop[49] $end
$upscope $end
$scope begin or_loop[50] $end
$upscope $end
$scope begin or_loop[51] $end
$upscope $end
$scope begin or_loop[52] $end
$upscope $end
$scope begin or_loop[53] $end
$upscope $end
$scope begin or_loop[54] $end
$upscope $end
$scope begin or_loop[55] $end
$upscope $end
$scope begin or_loop[56] $end
$upscope $end
$scope begin or_loop[57] $end
$upscope $end
$scope begin or_loop[58] $end
$upscope $end
$scope begin or_loop[59] $end
$upscope $end
$scope begin or_loop[60] $end
$upscope $end
$scope begin or_loop[61] $end
$upscope $end
$scope begin or_loop[62] $end
$upscope $end
$scope begin or_loop[63] $end
$upscope $end
$upscope $end
$scope module sll_op $end
$var wire 64 B' a [63:0] $end
$var wire 64 C' result [63:0] $end
$var wire 6 D' shift_amt [5:0] $end
$scope begin shift_loop[1] $end
$upscope $end
$scope begin shift_loop[2] $end
$upscope $end
$scope begin shift_loop[3] $end
$upscope $end
$scope begin shift_loop[4] $end
$upscope $end
$scope begin shift_loop[5] $end
$upscope $end
$upscope $end
$scope module sra_op $end
$var wire 64 E' a [63:0] $end
$var wire 64 F' result [63:0] $end
$var wire 6 G' shift_amt [5:0] $end
$var wire 1 H' sign_bit $end
$scope begin shift_loop[1] $end
$upscope $end
$scope begin shift_loop[2] $end
$upscope $end
$scope begin shift_loop[3] $end
$upscope $end
$scope begin shift_loop[4] $end
$upscope $end
$scope begin shift_loop[5] $end
$upscope $end
$upscope $end
$scope module srl_op $end
$var wire 64 I' a [63:0] $end
$var wire 64 J' result [63:0] $end
$var wire 6 K' shift_amt [5:0] $end
$scope begin shift_loop[1] $end
$upscope $end
$scope begin shift_loop[2] $end
$upscope $end
$scope begin shift_loop[3] $end
$upscope $end
$scope begin shift_loop[4] $end
$upscope $end
$scope begin shift_loop[5] $end
$upscope $end
$upscope $end
$scope module sub_op $end
$var wire 64 L' a [63:0] $end
$var wire 64 M' b [63:0] $end
$var wire 1 N' dummy_cout $end
$var wire 64 O' diff [63:0] $end
$var wire 64 P' b_complement [63:0] $end
$scope module comp $end
$var wire 64 Q' in [63:0] $end
$var wire 64 R' out [63:0] $end
$var wire 64 S' not_in [63:0] $end
$var wire 1 T' dummy_cout $end
$scope begin complement_loop[0] $end
$upscope $end
$scope begin complement_loop[1] $end
$upscope $end
$scope begin complement_loop[2] $end
$upscope $end
$scope begin complement_loop[3] $end
$upscope $end
$scope begin complement_loop[4] $end
$upscope $end
$scope begin complement_loop[5] $end
$upscope $end
$scope begin complement_loop[6] $end
$upscope $end
$scope begin complement_loop[7] $end
$upscope $end
$scope begin complement_loop[8] $end
$upscope $end
$scope begin complement_loop[9] $end
$upscope $end
$scope begin complement_loop[10] $end
$upscope $end
$scope begin complement_loop[11] $end
$upscope $end
$scope begin complement_loop[12] $end
$upscope $end
$scope begin complement_loop[13] $end
$upscope $end
$scope begin complement_loop[14] $end
$upscope $end
$scope begin complement_loop[15] $end
$upscope $end
$scope begin complement_loop[16] $end
$upscope $end
$scope begin complement_loop[17] $end
$upscope $end
$scope begin complement_loop[18] $end
$upscope $end
$scope begin complement_loop[19] $end
$upscope $end
$scope begin complement_loop[20] $end
$upscope $end
$scope begin complement_loop[21] $end
$upscope $end
$scope begin complement_loop[22] $end
$upscope $end
$scope begin complement_loop[23] $end
$upscope $end
$scope begin complement_loop[24] $end
$upscope $end
$scope begin complement_loop[25] $end
$upscope $end
$scope begin complement_loop[26] $end
$upscope $end
$scope begin complement_loop[27] $end
$upscope $end
$scope begin complement_loop[28] $end
$upscope $end
$scope begin complement_loop[29] $end
$upscope $end
$scope begin complement_loop[30] $end
$upscope $end
$scope begin complement_loop[31] $end
$upscope $end
$scope begin complement_loop[32] $end
$upscope $end
$scope begin complement_loop[33] $end
$upscope $end
$scope begin complement_loop[34] $end
$upscope $end
$scope begin complement_loop[35] $end
$upscope $end
$scope begin complement_loop[36] $end
$upscope $end
$scope begin complement_loop[37] $end
$upscope $end
$scope begin complement_loop[38] $end
$upscope $end
$scope begin complement_loop[39] $end
$upscope $end
$scope begin complement_loop[40] $end
$upscope $end
$scope begin complement_loop[41] $end
$upscope $end
$scope begin complement_loop[42] $end
$upscope $end
$scope begin complement_loop[43] $end
$upscope $end
$scope begin complement_loop[44] $end
$upscope $end
$scope begin complement_loop[45] $end
$upscope $end
$scope begin complement_loop[46] $end
$upscope $end
$scope begin complement_loop[47] $end
$upscope $end
$scope begin complement_loop[48] $end
$upscope $end
$scope begin complement_loop[49] $end
$upscope $end
$scope begin complement_loop[50] $end
$upscope $end
$scope begin complement_loop[51] $end
$upscope $end
$scope begin complement_loop[52] $end
$upscope $end
$scope begin complement_loop[53] $end
$upscope $end
$scope begin complement_loop[54] $end
$upscope $end
$scope begin complement_loop[55] $end
$upscope $end
$scope begin complement_loop[56] $end
$upscope $end
$scope begin complement_loop[57] $end
$upscope $end
$scope begin complement_loop[58] $end
$upscope $end
$scope begin complement_loop[59] $end
$upscope $end
$scope begin complement_loop[60] $end
$upscope $end
$scope begin complement_loop[61] $end
$upscope $end
$scope begin complement_loop[62] $end
$upscope $end
$scope begin complement_loop[63] $end
$upscope $end
$scope module add_one $end
$var wire 64 U' a [63:0] $end
$var wire 64 V' b [63:0] $end
$var wire 1 W' cin $end
$var wire 64 X' sum [63:0] $end
$var wire 1 T' cout $end
$var wire 64 Y' carry [63:0] $end
$scope begin adder_loop[0] $end
$scope begin genblk2 $end
$scope module fa $end
$var wire 1 Z' a $end
$var wire 1 [' b $end
$var wire 1 W' cin $end
$var wire 1 \' cout $end
$var wire 1 ]' sum $end
$var wire 1 ^' w1 $end
$var wire 1 _' w2 $end
$var wire 1 `' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[1] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 a' a $end
$var wire 1 b' b $end
$var wire 1 c' cin $end
$var wire 1 d' cout $end
$var wire 1 e' sum $end
$var wire 1 f' w1 $end
$var wire 1 g' w2 $end
$var wire 1 h' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 i' a $end
$var wire 1 j' b $end
$var wire 1 k' cin $end
$var wire 1 l' cout $end
$var wire 1 m' sum $end
$var wire 1 n' w1 $end
$var wire 1 o' w2 $end
$var wire 1 p' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[3] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 q' a $end
$var wire 1 r' b $end
$var wire 1 s' cin $end
$var wire 1 t' cout $end
$var wire 1 u' sum $end
$var wire 1 v' w1 $end
$var wire 1 w' w2 $end
$var wire 1 x' w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[4] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 y' a $end
$var wire 1 z' b $end
$var wire 1 {' cin $end
$var wire 1 |' cout $end
$var wire 1 }' sum $end
$var wire 1 ~' w1 $end
$var wire 1 !( w2 $end
$var wire 1 "( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[5] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 #( a $end
$var wire 1 $( b $end
$var wire 1 %( cin $end
$var wire 1 &( cout $end
$var wire 1 '( sum $end
$var wire 1 (( w1 $end
$var wire 1 )( w2 $end
$var wire 1 *( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[6] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 +( a $end
$var wire 1 ,( b $end
$var wire 1 -( cin $end
$var wire 1 .( cout $end
$var wire 1 /( sum $end
$var wire 1 0( w1 $end
$var wire 1 1( w2 $end
$var wire 1 2( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[7] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 3( a $end
$var wire 1 4( b $end
$var wire 1 5( cin $end
$var wire 1 6( cout $end
$var wire 1 7( sum $end
$var wire 1 8( w1 $end
$var wire 1 9( w2 $end
$var wire 1 :( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[8] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ;( a $end
$var wire 1 <( b $end
$var wire 1 =( cin $end
$var wire 1 >( cout $end
$var wire 1 ?( sum $end
$var wire 1 @( w1 $end
$var wire 1 A( w2 $end
$var wire 1 B( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[9] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 C( a $end
$var wire 1 D( b $end
$var wire 1 E( cin $end
$var wire 1 F( cout $end
$var wire 1 G( sum $end
$var wire 1 H( w1 $end
$var wire 1 I( w2 $end
$var wire 1 J( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[10] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 K( a $end
$var wire 1 L( b $end
$var wire 1 M( cin $end
$var wire 1 N( cout $end
$var wire 1 O( sum $end
$var wire 1 P( w1 $end
$var wire 1 Q( w2 $end
$var wire 1 R( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[11] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 S( a $end
$var wire 1 T( b $end
$var wire 1 U( cin $end
$var wire 1 V( cout $end
$var wire 1 W( sum $end
$var wire 1 X( w1 $end
$var wire 1 Y( w2 $end
$var wire 1 Z( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[12] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 [( a $end
$var wire 1 \( b $end
$var wire 1 ]( cin $end
$var wire 1 ^( cout $end
$var wire 1 _( sum $end
$var wire 1 `( w1 $end
$var wire 1 a( w2 $end
$var wire 1 b( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[13] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 c( a $end
$var wire 1 d( b $end
$var wire 1 e( cin $end
$var wire 1 f( cout $end
$var wire 1 g( sum $end
$var wire 1 h( w1 $end
$var wire 1 i( w2 $end
$var wire 1 j( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[14] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 k( a $end
$var wire 1 l( b $end
$var wire 1 m( cin $end
$var wire 1 n( cout $end
$var wire 1 o( sum $end
$var wire 1 p( w1 $end
$var wire 1 q( w2 $end
$var wire 1 r( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[15] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 s( a $end
$var wire 1 t( b $end
$var wire 1 u( cin $end
$var wire 1 v( cout $end
$var wire 1 w( sum $end
$var wire 1 x( w1 $end
$var wire 1 y( w2 $end
$var wire 1 z( w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[16] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 {( a $end
$var wire 1 |( b $end
$var wire 1 }( cin $end
$var wire 1 ~( cout $end
$var wire 1 !) sum $end
$var wire 1 ") w1 $end
$var wire 1 #) w2 $end
$var wire 1 $) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[17] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 %) a $end
$var wire 1 &) b $end
$var wire 1 ') cin $end
$var wire 1 () cout $end
$var wire 1 )) sum $end
$var wire 1 *) w1 $end
$var wire 1 +) w2 $end
$var wire 1 ,) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[18] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 -) a $end
$var wire 1 .) b $end
$var wire 1 /) cin $end
$var wire 1 0) cout $end
$var wire 1 1) sum $end
$var wire 1 2) w1 $end
$var wire 1 3) w2 $end
$var wire 1 4) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[19] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 5) a $end
$var wire 1 6) b $end
$var wire 1 7) cin $end
$var wire 1 8) cout $end
$var wire 1 9) sum $end
$var wire 1 :) w1 $end
$var wire 1 ;) w2 $end
$var wire 1 <) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[20] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 =) a $end
$var wire 1 >) b $end
$var wire 1 ?) cin $end
$var wire 1 @) cout $end
$var wire 1 A) sum $end
$var wire 1 B) w1 $end
$var wire 1 C) w2 $end
$var wire 1 D) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[21] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 E) a $end
$var wire 1 F) b $end
$var wire 1 G) cin $end
$var wire 1 H) cout $end
$var wire 1 I) sum $end
$var wire 1 J) w1 $end
$var wire 1 K) w2 $end
$var wire 1 L) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[22] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 M) a $end
$var wire 1 N) b $end
$var wire 1 O) cin $end
$var wire 1 P) cout $end
$var wire 1 Q) sum $end
$var wire 1 R) w1 $end
$var wire 1 S) w2 $end
$var wire 1 T) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[23] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 U) a $end
$var wire 1 V) b $end
$var wire 1 W) cin $end
$var wire 1 X) cout $end
$var wire 1 Y) sum $end
$var wire 1 Z) w1 $end
$var wire 1 [) w2 $end
$var wire 1 \) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[24] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ]) a $end
$var wire 1 ^) b $end
$var wire 1 _) cin $end
$var wire 1 `) cout $end
$var wire 1 a) sum $end
$var wire 1 b) w1 $end
$var wire 1 c) w2 $end
$var wire 1 d) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[25] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 e) a $end
$var wire 1 f) b $end
$var wire 1 g) cin $end
$var wire 1 h) cout $end
$var wire 1 i) sum $end
$var wire 1 j) w1 $end
$var wire 1 k) w2 $end
$var wire 1 l) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[26] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 m) a $end
$var wire 1 n) b $end
$var wire 1 o) cin $end
$var wire 1 p) cout $end
$var wire 1 q) sum $end
$var wire 1 r) w1 $end
$var wire 1 s) w2 $end
$var wire 1 t) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[27] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 u) a $end
$var wire 1 v) b $end
$var wire 1 w) cin $end
$var wire 1 x) cout $end
$var wire 1 y) sum $end
$var wire 1 z) w1 $end
$var wire 1 {) w2 $end
$var wire 1 |) w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[28] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 }) a $end
$var wire 1 ~) b $end
$var wire 1 !* cin $end
$var wire 1 "* cout $end
$var wire 1 #* sum $end
$var wire 1 $* w1 $end
$var wire 1 %* w2 $end
$var wire 1 &* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[29] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 '* a $end
$var wire 1 (* b $end
$var wire 1 )* cin $end
$var wire 1 ** cout $end
$var wire 1 +* sum $end
$var wire 1 ,* w1 $end
$var wire 1 -* w2 $end
$var wire 1 .* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[30] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 /* a $end
$var wire 1 0* b $end
$var wire 1 1* cin $end
$var wire 1 2* cout $end
$var wire 1 3* sum $end
$var wire 1 4* w1 $end
$var wire 1 5* w2 $end
$var wire 1 6* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[31] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 7* a $end
$var wire 1 8* b $end
$var wire 1 9* cin $end
$var wire 1 :* cout $end
$var wire 1 ;* sum $end
$var wire 1 <* w1 $end
$var wire 1 =* w2 $end
$var wire 1 >* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[32] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ?* a $end
$var wire 1 @* b $end
$var wire 1 A* cin $end
$var wire 1 B* cout $end
$var wire 1 C* sum $end
$var wire 1 D* w1 $end
$var wire 1 E* w2 $end
$var wire 1 F* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[33] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 G* a $end
$var wire 1 H* b $end
$var wire 1 I* cin $end
$var wire 1 J* cout $end
$var wire 1 K* sum $end
$var wire 1 L* w1 $end
$var wire 1 M* w2 $end
$var wire 1 N* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[34] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 O* a $end
$var wire 1 P* b $end
$var wire 1 Q* cin $end
$var wire 1 R* cout $end
$var wire 1 S* sum $end
$var wire 1 T* w1 $end
$var wire 1 U* w2 $end
$var wire 1 V* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[35] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 W* a $end
$var wire 1 X* b $end
$var wire 1 Y* cin $end
$var wire 1 Z* cout $end
$var wire 1 [* sum $end
$var wire 1 \* w1 $end
$var wire 1 ]* w2 $end
$var wire 1 ^* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[36] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 _* a $end
$var wire 1 `* b $end
$var wire 1 a* cin $end
$var wire 1 b* cout $end
$var wire 1 c* sum $end
$var wire 1 d* w1 $end
$var wire 1 e* w2 $end
$var wire 1 f* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[37] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 g* a $end
$var wire 1 h* b $end
$var wire 1 i* cin $end
$var wire 1 j* cout $end
$var wire 1 k* sum $end
$var wire 1 l* w1 $end
$var wire 1 m* w2 $end
$var wire 1 n* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[38] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 o* a $end
$var wire 1 p* b $end
$var wire 1 q* cin $end
$var wire 1 r* cout $end
$var wire 1 s* sum $end
$var wire 1 t* w1 $end
$var wire 1 u* w2 $end
$var wire 1 v* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[39] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 w* a $end
$var wire 1 x* b $end
$var wire 1 y* cin $end
$var wire 1 z* cout $end
$var wire 1 {* sum $end
$var wire 1 |* w1 $end
$var wire 1 }* w2 $end
$var wire 1 ~* w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[40] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 !+ a $end
$var wire 1 "+ b $end
$var wire 1 #+ cin $end
$var wire 1 $+ cout $end
$var wire 1 %+ sum $end
$var wire 1 &+ w1 $end
$var wire 1 '+ w2 $end
$var wire 1 (+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[41] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 )+ a $end
$var wire 1 *+ b $end
$var wire 1 ++ cin $end
$var wire 1 ,+ cout $end
$var wire 1 -+ sum $end
$var wire 1 .+ w1 $end
$var wire 1 /+ w2 $end
$var wire 1 0+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[42] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 1+ a $end
$var wire 1 2+ b $end
$var wire 1 3+ cin $end
$var wire 1 4+ cout $end
$var wire 1 5+ sum $end
$var wire 1 6+ w1 $end
$var wire 1 7+ w2 $end
$var wire 1 8+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[43] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 9+ a $end
$var wire 1 :+ b $end
$var wire 1 ;+ cin $end
$var wire 1 <+ cout $end
$var wire 1 =+ sum $end
$var wire 1 >+ w1 $end
$var wire 1 ?+ w2 $end
$var wire 1 @+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[44] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 A+ a $end
$var wire 1 B+ b $end
$var wire 1 C+ cin $end
$var wire 1 D+ cout $end
$var wire 1 E+ sum $end
$var wire 1 F+ w1 $end
$var wire 1 G+ w2 $end
$var wire 1 H+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[45] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 I+ a $end
$var wire 1 J+ b $end
$var wire 1 K+ cin $end
$var wire 1 L+ cout $end
$var wire 1 M+ sum $end
$var wire 1 N+ w1 $end
$var wire 1 O+ w2 $end
$var wire 1 P+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[46] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Q+ a $end
$var wire 1 R+ b $end
$var wire 1 S+ cin $end
$var wire 1 T+ cout $end
$var wire 1 U+ sum $end
$var wire 1 V+ w1 $end
$var wire 1 W+ w2 $end
$var wire 1 X+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[47] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Y+ a $end
$var wire 1 Z+ b $end
$var wire 1 [+ cin $end
$var wire 1 \+ cout $end
$var wire 1 ]+ sum $end
$var wire 1 ^+ w1 $end
$var wire 1 _+ w2 $end
$var wire 1 `+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[48] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 a+ a $end
$var wire 1 b+ b $end
$var wire 1 c+ cin $end
$var wire 1 d+ cout $end
$var wire 1 e+ sum $end
$var wire 1 f+ w1 $end
$var wire 1 g+ w2 $end
$var wire 1 h+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[49] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 i+ a $end
$var wire 1 j+ b $end
$var wire 1 k+ cin $end
$var wire 1 l+ cout $end
$var wire 1 m+ sum $end
$var wire 1 n+ w1 $end
$var wire 1 o+ w2 $end
$var wire 1 p+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[50] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 q+ a $end
$var wire 1 r+ b $end
$var wire 1 s+ cin $end
$var wire 1 t+ cout $end
$var wire 1 u+ sum $end
$var wire 1 v+ w1 $end
$var wire 1 w+ w2 $end
$var wire 1 x+ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[51] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 y+ a $end
$var wire 1 z+ b $end
$var wire 1 {+ cin $end
$var wire 1 |+ cout $end
$var wire 1 }+ sum $end
$var wire 1 ~+ w1 $end
$var wire 1 !, w2 $end
$var wire 1 ", w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[52] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 #, a $end
$var wire 1 $, b $end
$var wire 1 %, cin $end
$var wire 1 &, cout $end
$var wire 1 ', sum $end
$var wire 1 (, w1 $end
$var wire 1 ), w2 $end
$var wire 1 *, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[53] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 +, a $end
$var wire 1 ,, b $end
$var wire 1 -, cin $end
$var wire 1 ., cout $end
$var wire 1 /, sum $end
$var wire 1 0, w1 $end
$var wire 1 1, w2 $end
$var wire 1 2, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[54] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 3, a $end
$var wire 1 4, b $end
$var wire 1 5, cin $end
$var wire 1 6, cout $end
$var wire 1 7, sum $end
$var wire 1 8, w1 $end
$var wire 1 9, w2 $end
$var wire 1 :, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[55] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ;, a $end
$var wire 1 <, b $end
$var wire 1 =, cin $end
$var wire 1 >, cout $end
$var wire 1 ?, sum $end
$var wire 1 @, w1 $end
$var wire 1 A, w2 $end
$var wire 1 B, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[56] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 C, a $end
$var wire 1 D, b $end
$var wire 1 E, cin $end
$var wire 1 F, cout $end
$var wire 1 G, sum $end
$var wire 1 H, w1 $end
$var wire 1 I, w2 $end
$var wire 1 J, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[57] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 K, a $end
$var wire 1 L, b $end
$var wire 1 M, cin $end
$var wire 1 N, cout $end
$var wire 1 O, sum $end
$var wire 1 P, w1 $end
$var wire 1 Q, w2 $end
$var wire 1 R, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[58] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 S, a $end
$var wire 1 T, b $end
$var wire 1 U, cin $end
$var wire 1 V, cout $end
$var wire 1 W, sum $end
$var wire 1 X, w1 $end
$var wire 1 Y, w2 $end
$var wire 1 Z, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[59] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 [, a $end
$var wire 1 \, b $end
$var wire 1 ], cin $end
$var wire 1 ^, cout $end
$var wire 1 _, sum $end
$var wire 1 `, w1 $end
$var wire 1 a, w2 $end
$var wire 1 b, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[60] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 c, a $end
$var wire 1 d, b $end
$var wire 1 e, cin $end
$var wire 1 f, cout $end
$var wire 1 g, sum $end
$var wire 1 h, w1 $end
$var wire 1 i, w2 $end
$var wire 1 j, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[61] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 k, a $end
$var wire 1 l, b $end
$var wire 1 m, cin $end
$var wire 1 n, cout $end
$var wire 1 o, sum $end
$var wire 1 p, w1 $end
$var wire 1 q, w2 $end
$var wire 1 r, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[62] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 s, a $end
$var wire 1 t, b $end
$var wire 1 u, cin $end
$var wire 1 v, cout $end
$var wire 1 w, sum $end
$var wire 1 x, w1 $end
$var wire 1 y, w2 $end
$var wire 1 z, w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[63] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 {, a $end
$var wire 1 |, b $end
$var wire 1 }, cin $end
$var wire 1 ~, cout $end
$var wire 1 !- sum $end
$var wire 1 "- w1 $end
$var wire 1 #- w2 $end
$var wire 1 $- w3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sub $end
$var wire 64 %- a [63:0] $end
$var wire 64 &- b [63:0] $end
$var wire 1 '- cin $end
$var wire 64 (- sum [63:0] $end
$var wire 1 N' cout $end
$var wire 64 )- carry [63:0] $end
$scope begin adder_loop[0] $end
$scope begin genblk2 $end
$scope module fa $end
$var wire 1 *- a $end
$var wire 1 +- b $end
$var wire 1 '- cin $end
$var wire 1 ,- cout $end
$var wire 1 -- sum $end
$var wire 1 .- w1 $end
$var wire 1 /- w2 $end
$var wire 1 0- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[1] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 1- a $end
$var wire 1 2- b $end
$var wire 1 3- cin $end
$var wire 1 4- cout $end
$var wire 1 5- sum $end
$var wire 1 6- w1 $end
$var wire 1 7- w2 $end
$var wire 1 8- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 9- a $end
$var wire 1 :- b $end
$var wire 1 ;- cin $end
$var wire 1 <- cout $end
$var wire 1 =- sum $end
$var wire 1 >- w1 $end
$var wire 1 ?- w2 $end
$var wire 1 @- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[3] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 A- a $end
$var wire 1 B- b $end
$var wire 1 C- cin $end
$var wire 1 D- cout $end
$var wire 1 E- sum $end
$var wire 1 F- w1 $end
$var wire 1 G- w2 $end
$var wire 1 H- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[4] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 I- a $end
$var wire 1 J- b $end
$var wire 1 K- cin $end
$var wire 1 L- cout $end
$var wire 1 M- sum $end
$var wire 1 N- w1 $end
$var wire 1 O- w2 $end
$var wire 1 P- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[5] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Q- a $end
$var wire 1 R- b $end
$var wire 1 S- cin $end
$var wire 1 T- cout $end
$var wire 1 U- sum $end
$var wire 1 V- w1 $end
$var wire 1 W- w2 $end
$var wire 1 X- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[6] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Y- a $end
$var wire 1 Z- b $end
$var wire 1 [- cin $end
$var wire 1 \- cout $end
$var wire 1 ]- sum $end
$var wire 1 ^- w1 $end
$var wire 1 _- w2 $end
$var wire 1 `- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[7] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 a- a $end
$var wire 1 b- b $end
$var wire 1 c- cin $end
$var wire 1 d- cout $end
$var wire 1 e- sum $end
$var wire 1 f- w1 $end
$var wire 1 g- w2 $end
$var wire 1 h- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[8] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 i- a $end
$var wire 1 j- b $end
$var wire 1 k- cin $end
$var wire 1 l- cout $end
$var wire 1 m- sum $end
$var wire 1 n- w1 $end
$var wire 1 o- w2 $end
$var wire 1 p- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[9] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 q- a $end
$var wire 1 r- b $end
$var wire 1 s- cin $end
$var wire 1 t- cout $end
$var wire 1 u- sum $end
$var wire 1 v- w1 $end
$var wire 1 w- w2 $end
$var wire 1 x- w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[10] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 y- a $end
$var wire 1 z- b $end
$var wire 1 {- cin $end
$var wire 1 |- cout $end
$var wire 1 }- sum $end
$var wire 1 ~- w1 $end
$var wire 1 !. w2 $end
$var wire 1 ". w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[11] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 #. a $end
$var wire 1 $. b $end
$var wire 1 %. cin $end
$var wire 1 &. cout $end
$var wire 1 '. sum $end
$var wire 1 (. w1 $end
$var wire 1 ). w2 $end
$var wire 1 *. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[12] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 +. a $end
$var wire 1 ,. b $end
$var wire 1 -. cin $end
$var wire 1 .. cout $end
$var wire 1 /. sum $end
$var wire 1 0. w1 $end
$var wire 1 1. w2 $end
$var wire 1 2. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[13] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 3. a $end
$var wire 1 4. b $end
$var wire 1 5. cin $end
$var wire 1 6. cout $end
$var wire 1 7. sum $end
$var wire 1 8. w1 $end
$var wire 1 9. w2 $end
$var wire 1 :. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[14] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ;. a $end
$var wire 1 <. b $end
$var wire 1 =. cin $end
$var wire 1 >. cout $end
$var wire 1 ?. sum $end
$var wire 1 @. w1 $end
$var wire 1 A. w2 $end
$var wire 1 B. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[15] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 C. a $end
$var wire 1 D. b $end
$var wire 1 E. cin $end
$var wire 1 F. cout $end
$var wire 1 G. sum $end
$var wire 1 H. w1 $end
$var wire 1 I. w2 $end
$var wire 1 J. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[16] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 K. a $end
$var wire 1 L. b $end
$var wire 1 M. cin $end
$var wire 1 N. cout $end
$var wire 1 O. sum $end
$var wire 1 P. w1 $end
$var wire 1 Q. w2 $end
$var wire 1 R. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[17] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 S. a $end
$var wire 1 T. b $end
$var wire 1 U. cin $end
$var wire 1 V. cout $end
$var wire 1 W. sum $end
$var wire 1 X. w1 $end
$var wire 1 Y. w2 $end
$var wire 1 Z. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[18] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 [. a $end
$var wire 1 \. b $end
$var wire 1 ]. cin $end
$var wire 1 ^. cout $end
$var wire 1 _. sum $end
$var wire 1 `. w1 $end
$var wire 1 a. w2 $end
$var wire 1 b. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[19] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 c. a $end
$var wire 1 d. b $end
$var wire 1 e. cin $end
$var wire 1 f. cout $end
$var wire 1 g. sum $end
$var wire 1 h. w1 $end
$var wire 1 i. w2 $end
$var wire 1 j. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[20] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 k. a $end
$var wire 1 l. b $end
$var wire 1 m. cin $end
$var wire 1 n. cout $end
$var wire 1 o. sum $end
$var wire 1 p. w1 $end
$var wire 1 q. w2 $end
$var wire 1 r. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[21] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 s. a $end
$var wire 1 t. b $end
$var wire 1 u. cin $end
$var wire 1 v. cout $end
$var wire 1 w. sum $end
$var wire 1 x. w1 $end
$var wire 1 y. w2 $end
$var wire 1 z. w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[22] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 {. a $end
$var wire 1 |. b $end
$var wire 1 }. cin $end
$var wire 1 ~. cout $end
$var wire 1 !/ sum $end
$var wire 1 "/ w1 $end
$var wire 1 #/ w2 $end
$var wire 1 $/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[23] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 %/ a $end
$var wire 1 &/ b $end
$var wire 1 '/ cin $end
$var wire 1 (/ cout $end
$var wire 1 )/ sum $end
$var wire 1 */ w1 $end
$var wire 1 +/ w2 $end
$var wire 1 ,/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[24] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 -/ a $end
$var wire 1 ./ b $end
$var wire 1 // cin $end
$var wire 1 0/ cout $end
$var wire 1 1/ sum $end
$var wire 1 2/ w1 $end
$var wire 1 3/ w2 $end
$var wire 1 4/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[25] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 5/ a $end
$var wire 1 6/ b $end
$var wire 1 7/ cin $end
$var wire 1 8/ cout $end
$var wire 1 9/ sum $end
$var wire 1 :/ w1 $end
$var wire 1 ;/ w2 $end
$var wire 1 </ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[26] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 =/ a $end
$var wire 1 >/ b $end
$var wire 1 ?/ cin $end
$var wire 1 @/ cout $end
$var wire 1 A/ sum $end
$var wire 1 B/ w1 $end
$var wire 1 C/ w2 $end
$var wire 1 D/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[27] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 E/ a $end
$var wire 1 F/ b $end
$var wire 1 G/ cin $end
$var wire 1 H/ cout $end
$var wire 1 I/ sum $end
$var wire 1 J/ w1 $end
$var wire 1 K/ w2 $end
$var wire 1 L/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[28] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 M/ a $end
$var wire 1 N/ b $end
$var wire 1 O/ cin $end
$var wire 1 P/ cout $end
$var wire 1 Q/ sum $end
$var wire 1 R/ w1 $end
$var wire 1 S/ w2 $end
$var wire 1 T/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[29] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 U/ a $end
$var wire 1 V/ b $end
$var wire 1 W/ cin $end
$var wire 1 X/ cout $end
$var wire 1 Y/ sum $end
$var wire 1 Z/ w1 $end
$var wire 1 [/ w2 $end
$var wire 1 \/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[30] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ]/ a $end
$var wire 1 ^/ b $end
$var wire 1 _/ cin $end
$var wire 1 `/ cout $end
$var wire 1 a/ sum $end
$var wire 1 b/ w1 $end
$var wire 1 c/ w2 $end
$var wire 1 d/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[31] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 e/ a $end
$var wire 1 f/ b $end
$var wire 1 g/ cin $end
$var wire 1 h/ cout $end
$var wire 1 i/ sum $end
$var wire 1 j/ w1 $end
$var wire 1 k/ w2 $end
$var wire 1 l/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[32] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 m/ a $end
$var wire 1 n/ b $end
$var wire 1 o/ cin $end
$var wire 1 p/ cout $end
$var wire 1 q/ sum $end
$var wire 1 r/ w1 $end
$var wire 1 s/ w2 $end
$var wire 1 t/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[33] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 u/ a $end
$var wire 1 v/ b $end
$var wire 1 w/ cin $end
$var wire 1 x/ cout $end
$var wire 1 y/ sum $end
$var wire 1 z/ w1 $end
$var wire 1 {/ w2 $end
$var wire 1 |/ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[34] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 }/ a $end
$var wire 1 ~/ b $end
$var wire 1 !0 cin $end
$var wire 1 "0 cout $end
$var wire 1 #0 sum $end
$var wire 1 $0 w1 $end
$var wire 1 %0 w2 $end
$var wire 1 &0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[35] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 '0 a $end
$var wire 1 (0 b $end
$var wire 1 )0 cin $end
$var wire 1 *0 cout $end
$var wire 1 +0 sum $end
$var wire 1 ,0 w1 $end
$var wire 1 -0 w2 $end
$var wire 1 .0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[36] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 /0 a $end
$var wire 1 00 b $end
$var wire 1 10 cin $end
$var wire 1 20 cout $end
$var wire 1 30 sum $end
$var wire 1 40 w1 $end
$var wire 1 50 w2 $end
$var wire 1 60 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[37] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 70 a $end
$var wire 1 80 b $end
$var wire 1 90 cin $end
$var wire 1 :0 cout $end
$var wire 1 ;0 sum $end
$var wire 1 <0 w1 $end
$var wire 1 =0 w2 $end
$var wire 1 >0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[38] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ?0 a $end
$var wire 1 @0 b $end
$var wire 1 A0 cin $end
$var wire 1 B0 cout $end
$var wire 1 C0 sum $end
$var wire 1 D0 w1 $end
$var wire 1 E0 w2 $end
$var wire 1 F0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[39] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 G0 a $end
$var wire 1 H0 b $end
$var wire 1 I0 cin $end
$var wire 1 J0 cout $end
$var wire 1 K0 sum $end
$var wire 1 L0 w1 $end
$var wire 1 M0 w2 $end
$var wire 1 N0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[40] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 O0 a $end
$var wire 1 P0 b $end
$var wire 1 Q0 cin $end
$var wire 1 R0 cout $end
$var wire 1 S0 sum $end
$var wire 1 T0 w1 $end
$var wire 1 U0 w2 $end
$var wire 1 V0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[41] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 W0 a $end
$var wire 1 X0 b $end
$var wire 1 Y0 cin $end
$var wire 1 Z0 cout $end
$var wire 1 [0 sum $end
$var wire 1 \0 w1 $end
$var wire 1 ]0 w2 $end
$var wire 1 ^0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[42] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 _0 a $end
$var wire 1 `0 b $end
$var wire 1 a0 cin $end
$var wire 1 b0 cout $end
$var wire 1 c0 sum $end
$var wire 1 d0 w1 $end
$var wire 1 e0 w2 $end
$var wire 1 f0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[43] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 g0 a $end
$var wire 1 h0 b $end
$var wire 1 i0 cin $end
$var wire 1 j0 cout $end
$var wire 1 k0 sum $end
$var wire 1 l0 w1 $end
$var wire 1 m0 w2 $end
$var wire 1 n0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[44] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 o0 a $end
$var wire 1 p0 b $end
$var wire 1 q0 cin $end
$var wire 1 r0 cout $end
$var wire 1 s0 sum $end
$var wire 1 t0 w1 $end
$var wire 1 u0 w2 $end
$var wire 1 v0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[45] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 w0 a $end
$var wire 1 x0 b $end
$var wire 1 y0 cin $end
$var wire 1 z0 cout $end
$var wire 1 {0 sum $end
$var wire 1 |0 w1 $end
$var wire 1 }0 w2 $end
$var wire 1 ~0 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[46] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 !1 a $end
$var wire 1 "1 b $end
$var wire 1 #1 cin $end
$var wire 1 $1 cout $end
$var wire 1 %1 sum $end
$var wire 1 &1 w1 $end
$var wire 1 '1 w2 $end
$var wire 1 (1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[47] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 )1 a $end
$var wire 1 *1 b $end
$var wire 1 +1 cin $end
$var wire 1 ,1 cout $end
$var wire 1 -1 sum $end
$var wire 1 .1 w1 $end
$var wire 1 /1 w2 $end
$var wire 1 01 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[48] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 11 a $end
$var wire 1 21 b $end
$var wire 1 31 cin $end
$var wire 1 41 cout $end
$var wire 1 51 sum $end
$var wire 1 61 w1 $end
$var wire 1 71 w2 $end
$var wire 1 81 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[49] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 91 a $end
$var wire 1 :1 b $end
$var wire 1 ;1 cin $end
$var wire 1 <1 cout $end
$var wire 1 =1 sum $end
$var wire 1 >1 w1 $end
$var wire 1 ?1 w2 $end
$var wire 1 @1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[50] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 A1 a $end
$var wire 1 B1 b $end
$var wire 1 C1 cin $end
$var wire 1 D1 cout $end
$var wire 1 E1 sum $end
$var wire 1 F1 w1 $end
$var wire 1 G1 w2 $end
$var wire 1 H1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[51] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 I1 a $end
$var wire 1 J1 b $end
$var wire 1 K1 cin $end
$var wire 1 L1 cout $end
$var wire 1 M1 sum $end
$var wire 1 N1 w1 $end
$var wire 1 O1 w2 $end
$var wire 1 P1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[52] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Q1 a $end
$var wire 1 R1 b $end
$var wire 1 S1 cin $end
$var wire 1 T1 cout $end
$var wire 1 U1 sum $end
$var wire 1 V1 w1 $end
$var wire 1 W1 w2 $end
$var wire 1 X1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[53] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 Y1 a $end
$var wire 1 Z1 b $end
$var wire 1 [1 cin $end
$var wire 1 \1 cout $end
$var wire 1 ]1 sum $end
$var wire 1 ^1 w1 $end
$var wire 1 _1 w2 $end
$var wire 1 `1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[54] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 a1 a $end
$var wire 1 b1 b $end
$var wire 1 c1 cin $end
$var wire 1 d1 cout $end
$var wire 1 e1 sum $end
$var wire 1 f1 w1 $end
$var wire 1 g1 w2 $end
$var wire 1 h1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[55] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 i1 a $end
$var wire 1 j1 b $end
$var wire 1 k1 cin $end
$var wire 1 l1 cout $end
$var wire 1 m1 sum $end
$var wire 1 n1 w1 $end
$var wire 1 o1 w2 $end
$var wire 1 p1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[56] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 q1 a $end
$var wire 1 r1 b $end
$var wire 1 s1 cin $end
$var wire 1 t1 cout $end
$var wire 1 u1 sum $end
$var wire 1 v1 w1 $end
$var wire 1 w1 w2 $end
$var wire 1 x1 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[57] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 y1 a $end
$var wire 1 z1 b $end
$var wire 1 {1 cin $end
$var wire 1 |1 cout $end
$var wire 1 }1 sum $end
$var wire 1 ~1 w1 $end
$var wire 1 !2 w2 $end
$var wire 1 "2 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[58] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 #2 a $end
$var wire 1 $2 b $end
$var wire 1 %2 cin $end
$var wire 1 &2 cout $end
$var wire 1 '2 sum $end
$var wire 1 (2 w1 $end
$var wire 1 )2 w2 $end
$var wire 1 *2 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[59] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 +2 a $end
$var wire 1 ,2 b $end
$var wire 1 -2 cin $end
$var wire 1 .2 cout $end
$var wire 1 /2 sum $end
$var wire 1 02 w1 $end
$var wire 1 12 w2 $end
$var wire 1 22 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[60] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 32 a $end
$var wire 1 42 b $end
$var wire 1 52 cin $end
$var wire 1 62 cout $end
$var wire 1 72 sum $end
$var wire 1 82 w1 $end
$var wire 1 92 w2 $end
$var wire 1 :2 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[61] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 ;2 a $end
$var wire 1 <2 b $end
$var wire 1 =2 cin $end
$var wire 1 >2 cout $end
$var wire 1 ?2 sum $end
$var wire 1 @2 w1 $end
$var wire 1 A2 w2 $end
$var wire 1 B2 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[62] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 C2 a $end
$var wire 1 D2 b $end
$var wire 1 E2 cin $end
$var wire 1 F2 cout $end
$var wire 1 G2 sum $end
$var wire 1 H2 w1 $end
$var wire 1 I2 w2 $end
$var wire 1 J2 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder_loop[63] $end
$scope begin genblk3 $end
$scope module fa $end
$var wire 1 K2 a $end
$var wire 1 L2 b $end
$var wire 1 M2 cin $end
$var wire 1 N2 cout $end
$var wire 1 O2 sum $end
$var wire 1 P2 w1 $end
$var wire 1 Q2 w2 $end
$var wire 1 R2 w3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor_op $end
$var wire 64 S2 a [63:0] $end
$var wire 64 T2 b [63:0] $end
$var wire 64 U2 result [63:0] $end
$scope begin xor_loop[0] $end
$upscope $end
$scope begin xor_loop[1] $end
$upscope $end
$scope begin xor_loop[2] $end
$upscope $end
$scope begin xor_loop[3] $end
$upscope $end
$scope begin xor_loop[4] $end
$upscope $end
$scope begin xor_loop[5] $end
$upscope $end
$scope begin xor_loop[6] $end
$upscope $end
$scope begin xor_loop[7] $end
$upscope $end
$scope begin xor_loop[8] $end
$upscope $end
$scope begin xor_loop[9] $end
$upscope $end
$scope begin xor_loop[10] $end
$upscope $end
$scope begin xor_loop[11] $end
$upscope $end
$scope begin xor_loop[12] $end
$upscope $end
$scope begin xor_loop[13] $end
$upscope $end
$scope begin xor_loop[14] $end
$upscope $end
$scope begin xor_loop[15] $end
$upscope $end
$scope begin xor_loop[16] $end
$upscope $end
$scope begin xor_loop[17] $end
$upscope $end
$scope begin xor_loop[18] $end
$upscope $end
$scope begin xor_loop[19] $end
$upscope $end
$scope begin xor_loop[20] $end
$upscope $end
$scope begin xor_loop[21] $end
$upscope $end
$scope begin xor_loop[22] $end
$upscope $end
$scope begin xor_loop[23] $end
$upscope $end
$scope begin xor_loop[24] $end
$upscope $end
$scope begin xor_loop[25] $end
$upscope $end
$scope begin xor_loop[26] $end
$upscope $end
$scope begin xor_loop[27] $end
$upscope $end
$scope begin xor_loop[28] $end
$upscope $end
$scope begin xor_loop[29] $end
$upscope $end
$scope begin xor_loop[30] $end
$upscope $end
$scope begin xor_loop[31] $end
$upscope $end
$scope begin xor_loop[32] $end
$upscope $end
$scope begin xor_loop[33] $end
$upscope $end
$scope begin xor_loop[34] $end
$upscope $end
$scope begin xor_loop[35] $end
$upscope $end
$scope begin xor_loop[36] $end
$upscope $end
$scope begin xor_loop[37] $end
$upscope $end
$scope begin xor_loop[38] $end
$upscope $end
$scope begin xor_loop[39] $end
$upscope $end
$scope begin xor_loop[40] $end
$upscope $end
$scope begin xor_loop[41] $end
$upscope $end
$scope begin xor_loop[42] $end
$upscope $end
$scope begin xor_loop[43] $end
$upscope $end
$scope begin xor_loop[44] $end
$upscope $end
$scope begin xor_loop[45] $end
$upscope $end
$scope begin xor_loop[46] $end
$upscope $end
$scope begin xor_loop[47] $end
$upscope $end
$scope begin xor_loop[48] $end
$upscope $end
$scope begin xor_loop[49] $end
$upscope $end
$scope begin xor_loop[50] $end
$upscope $end
$scope begin xor_loop[51] $end
$upscope $end
$scope begin xor_loop[52] $end
$upscope $end
$scope begin xor_loop[53] $end
$upscope $end
$scope begin xor_loop[54] $end
$upscope $end
$scope begin xor_loop[55] $end
$upscope $end
$scope begin xor_loop[56] $end
$upscope $end
$scope begin xor_loop[57] $end
$upscope $end
$scope begin xor_loop[58] $end
$upscope $end
$scope begin xor_loop[59] $end
$upscope $end
$scope begin xor_loop[60] $end
$upscope $end
$scope begin xor_loop[61] $end
$upscope $end
$scope begin xor_loop[62] $end
$upscope $end
$scope begin xor_loop[63] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module imm_generator $end
$var wire 32 V2 instr [31:0] $end
$var reg 32 W2 imm [31:0] $end
$upscope $end
$scope module memory $end
$var wire 1 D IorD $end
$var wire 1 7 MemRead $end
$var wire 1 6 MemWrite $end
$var wire 32 X2 address [31:0] $end
$var wire 1 ! clk $end
$var wire 1 # reset $end
$var wire 32 Y2 write_data [31:0] $end
$var wire 14 Z2 word_addr [13:0] $end
$var reg 32 [2 read_data [31:0] $end
$var integer 32 \2 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000000000 \2
b0 [2
b0 Z2
b0 Y2
b0 X2
b0 W2
b0 V2
b0 U2
b0 T2
b0 S2
0R2
0Q2
0P2
0O2
0N2
0M2
0L2
0K2
0J2
0I2
0H2
0G2
0F2
0E2
0D2
0C2
0B2
0A2
0@2
0?2
0>2
0=2
0<2
0;2
0:2
092
082
072
062
052
042
032
022
012
002
0/2
0.2
0-2
0,2
0+2
0*2
0)2
0(2
0'2
0&2
0%2
0$2
0#2
0"2
0!2
0~1
0}1
0|1
0{1
0z1
0y1
0x1
0w1
0v1
0u1
0t1
0s1
0r1
0q1
0p1
0o1
0n1
0m1
0l1
0k1
0j1
0i1
0h1
0g1
0f1
0e1
0d1
0c1
0b1
0a1
0`1
0_1
0^1
0]1
0\1
0[1
0Z1
0Y1
0X1
0W1
0V1
0U1
0T1
0S1
0R1
0Q1
0P1
0O1
0N1
0M1
0L1
0K1
0J1
0I1
0H1
0G1
0F1
0E1
0D1
0C1
0B1
0A1
0@1
0?1
0>1
0=1
0<1
0;1
0:1
091
081
071
061
051
041
031
021
011
001
0/1
0.1
0-1
0,1
0+1
0*1
0)1
0(1
0'1
0&1
0%1
0$1
0#1
0"1
0!1
0~0
0}0
0|0
0{0
0z0
0y0
0x0
0w0
0v0
0u0
0t0
0s0
0r0
0q0
0p0
0o0
0n0
0m0
0l0
0k0
0j0
0i0
0h0
0g0
0f0
0e0
0d0
0c0
0b0
0a0
0`0
0_0
0^0
0]0
0\0
0[0
0Z0
0Y0
0X0
0W0
0V0
0U0
0T0
0S0
0R0
0Q0
0P0
0O0
0N0
0M0
0L0
0K0
0J0
0I0
0H0
0G0
0F0
0E0
0D0
0C0
0B0
0A0
0@0
0?0
0>0
0=0
0<0
0;0
0:0
090
080
070
060
050
040
030
020
010
000
0/0
0.0
0-0
0,0
0+0
0*0
0)0
0(0
0'0
0&0
0%0
0$0
0#0
0"0
0!0
0~/
0}/
0|/
0{/
0z/
0y/
0x/
0w/
0v/
0u/
0t/
0s/
0r/
0q/
0p/
0o/
0n/
0m/
0l/
0k/
0j/
0i/
0h/
0g/
0f/
0e/
0d/
0c/
0b/
0a/
0`/
0_/
0^/
0]/
0\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0U/
0T/
0S/
0R/
0Q/
0P/
0O/
0N/
0M/
0L/
0K/
0J/
0I/
0H/
0G/
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0=/
0</
0;/
0:/
09/
08/
07/
06/
05/
04/
03/
02/
01/
00/
0//
0./
0-/
0,/
0+/
0*/
0)/
0(/
0'/
0&/
0%/
0$/
0#/
0"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
0s.
0r.
0q.
0p.
0o.
0n.
0m.
0l.
0k.
0j.
0i.
0h.
0g.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
0_.
0^.
0].
0\.
0[.
0Z.
0Y.
0X.
0W.
0V.
0U.
0T.
0S.
0R.
0Q.
0P.
0O.
0N.
0M.
0L.
0K.
0J.
0I.
0H.
0G.
0F.
0E.
0D.
0C.
0B.
0A.
0@.
0?.
0>.
0=.
0<.
0;.
0:.
09.
08.
07.
06.
05.
04.
03.
02.
01.
00.
0/.
0..
0-.
0,.
0+.
0*.
0).
0(.
0'.
0&.
0%.
0$.
0#.
0".
0!.
0~-
0}-
0|-
0{-
0z-
0y-
0x-
0w-
0v-
0u-
0t-
0s-
0r-
0q-
0p-
0o-
0n-
0m-
0l-
0k-
0j-
0i-
0h-
0g-
0f-
0e-
0d-
0c-
0b-
0a-
0`-
0_-
0^-
0]-
0\-
0[-
0Z-
0Y-
0X-
0W-
0V-
0U-
0T-
0S-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
0G-
0F-
0E-
0D-
0C-
0B-
0A-
0@-
0?-
0>-
0=-
0<-
0;-
0:-
09-
08-
07-
06-
05-
04-
03-
02-
01-
00-
0/-
0.-
0--
0,-
0+-
0*-
b0 )-
b0 (-
0'-
b0 &-
b0 %-
0$-
1#-
1"-
0!-
1~,
1},
0|,
1{,
0z,
1y,
1x,
0w,
1v,
1u,
0t,
1s,
0r,
1q,
1p,
0o,
1n,
1m,
0l,
1k,
0j,
1i,
1h,
0g,
1f,
1e,
0d,
1c,
0b,
1a,
1`,
0_,
1^,
1],
0\,
1[,
0Z,
1Y,
1X,
0W,
1V,
1U,
0T,
1S,
0R,
1Q,
1P,
0O,
1N,
1M,
0L,
1K,
0J,
1I,
1H,
0G,
1F,
1E,
0D,
1C,
0B,
1A,
1@,
0?,
1>,
1=,
0<,
1;,
0:,
19,
18,
07,
16,
15,
04,
13,
02,
11,
10,
0/,
1.,
1-,
0,,
1+,
0*,
1),
1(,
0',
1&,
1%,
0$,
1#,
0",
1!,
1~+
0}+
1|+
1{+
0z+
1y+
0x+
1w+
1v+
0u+
1t+
1s+
0r+
1q+
0p+
1o+
1n+
0m+
1l+
1k+
0j+
1i+
0h+
1g+
1f+
0e+
1d+
1c+
0b+
1a+
0`+
1_+
1^+
0]+
1\+
1[+
0Z+
1Y+
0X+
1W+
1V+
0U+
1T+
1S+
0R+
1Q+
0P+
1O+
1N+
0M+
1L+
1K+
0J+
1I+
0H+
1G+
1F+
0E+
1D+
1C+
0B+
1A+
0@+
1?+
1>+
0=+
1<+
1;+
0:+
19+
08+
17+
16+
05+
14+
13+
02+
11+
00+
1/+
1.+
0-+
1,+
1++
0*+
1)+
0(+
1'+
1&+
0%+
1$+
1#+
0"+
1!+
0~*
1}*
1|*
0{*
1z*
1y*
0x*
1w*
0v*
1u*
1t*
0s*
1r*
1q*
0p*
1o*
0n*
1m*
1l*
0k*
1j*
1i*
0h*
1g*
0f*
1e*
1d*
0c*
1b*
1a*
0`*
1_*
0^*
1]*
1\*
0[*
1Z*
1Y*
0X*
1W*
0V*
1U*
1T*
0S*
1R*
1Q*
0P*
1O*
0N*
1M*
1L*
0K*
1J*
1I*
0H*
1G*
0F*
1E*
1D*
0C*
1B*
1A*
0@*
1?*
0>*
1=*
1<*
0;*
1:*
19*
08*
17*
06*
15*
14*
03*
12*
11*
00*
1/*
0.*
1-*
1,*
0+*
1**
1)*
0(*
1'*
0&*
1%*
1$*
0#*
1"*
1!*
0~)
1})
0|)
1{)
1z)
0y)
1x)
1w)
0v)
1u)
0t)
1s)
1r)
0q)
1p)
1o)
0n)
1m)
0l)
1k)
1j)
0i)
1h)
1g)
0f)
1e)
0d)
1c)
1b)
0a)
1`)
1_)
0^)
1])
0\)
1[)
1Z)
0Y)
1X)
1W)
0V)
1U)
0T)
1S)
1R)
0Q)
1P)
1O)
0N)
1M)
0L)
1K)
1J)
0I)
1H)
1G)
0F)
1E)
0D)
1C)
1B)
0A)
1@)
1?)
0>)
1=)
0<)
1;)
1:)
09)
18)
17)
06)
15)
04)
13)
12)
01)
10)
1/)
0.)
1-)
0,)
1+)
1*)
0))
1()
1')
0&)
1%)
0$)
1#)
1")
0!)
1~(
1}(
0|(
1{(
0z(
1y(
1x(
0w(
1v(
1u(
0t(
1s(
0r(
1q(
1p(
0o(
1n(
1m(
0l(
1k(
0j(
1i(
1h(
0g(
1f(
1e(
0d(
1c(
0b(
1a(
1`(
0_(
1^(
1](
0\(
1[(
0Z(
1Y(
1X(
0W(
1V(
1U(
0T(
1S(
0R(
1Q(
1P(
0O(
1N(
1M(
0L(
1K(
0J(
1I(
1H(
0G(
1F(
1E(
0D(
1C(
0B(
1A(
1@(
0?(
1>(
1=(
0<(
1;(
0:(
19(
18(
07(
16(
15(
04(
13(
02(
11(
10(
0/(
1.(
1-(
0,(
1+(
0*(
1)(
1((
0'(
1&(
1%(
0$(
1#(
0"(
1!(
1~'
0}'
1|'
1{'
0z'
1y'
0x'
1w'
1v'
0u'
1t'
1s'
0r'
1q'
0p'
1o'
1n'
0m'
1l'
1k'
0j'
1i'
0h'
1g'
1f'
0e'
1d'
1c'
0b'
1a'
1`'
0_'
0^'
0]'
1\'
1['
1Z'
b1111111111111111111111111111111111111111111111111111111111111111 Y'
b0 X'
0W'
b1 V'
b1111111111111111111111111111111111111111111111111111111111111111 U'
1T'
b1111111111111111111111111111111111111111111111111111111111111111 S'
b0 R'
b0 Q'
b0 P'
b0 O'
0N'
b0 M'
b0 L'
b0 K'
b0 J'
b0 I'
0H'
b0 G'
b0 F'
b0 E'
b0 D'
b0 C'
b0 B'
b0 A'
b0 @'
b0 ?'
b0 >'
b0 ='
b0 <'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
b0 p
0o
b0 n
0m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b100000 M
b0 L
b1 K
0J
1I
b0 H
b0 G
0F
b0 E
0D
1C
b0 B
b0 A
b1 @
0?
b0 >
b0 =
0<
b0 ;
0:
09
08
07
06
05
04
b0 3
b100 2
01
b0 0
b0 /
b0 .
b0 -
0,
b0 +
b0 *
b0 )
b0 (
b100 '
b0 &
b0 %
b0 $
1#
bx "
0!
$end
#5
b100000 M
1!
#10
0!
#15
b100000 M
1!
#20
0!
0#
#25
b0 2
b10 @
0C
0I
b10 K
b1 L
b0 "
1!
#30
0!
#35
1?
b0 @
b100 K
b10 L
b1 $
1!
#40
0!
#45
0?
b0 K
b100 L
b10 $
1!
#50
0!
#55
b100 2
b1 @
1C
1I
b1 K
b0 L
b11 $
1!
#60
0!
#65
b0 2
b10 @
0C
0I
b10 K
b1 L
b100 $
1!
#70
0!
#75
1?
b0 @
b100 K
b10 L
b101 $
1!
#80
0!
#85
0?
b0 K
b100 L
b110 $
1!
#90
0!
#95
b100 2
b1 @
1C
1I
b1 K
b0 L
b111 $
1!
#100
0!
#105
b0 2
b10 @
0C
0I
b10 K
b1 L
b1000 $
1!
#110
0!
#115
1?
b0 @
b100 K
b10 L
b1001 $
1!
#120
0!
#125
0?
b0 K
b100 L
b1010 $
1!
